{"timestamp": "2025-08-16T10:20:46.698090Z", "level": "ERROR", "logger": "main", "message": "Unhandled exception: List argument must consist only of tuples or dictionaries", "module": "logging_config", "function": "handle_exception", "line": 230, "process_id": 40640, "thread_id": 78732, "request_id": "dc6560c98e6431c1", "request": {"method": "GET", "url": "http://localhost:5000/api/public/products/1", "path": "/api/public/products/1", "remote_addr": "127.0.0.1", "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:143.0) Gecko/20100101 Firefox/143.0"}, "exception": {"type": "ArgumentError", "message": "List argument must consist only of tuples or dictionaries", "traceback": "Traceback (most recent call last):\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\routes.py\", line 125, in public_product_detail\n    product = execute_query(\"\"\"\n              ^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\models.py\", line 25, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 104, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 83, in execute_query_pooled\n    result = conn.execute(text(query), params or {})\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1409, in execute\n    distilled_parameters = _distill_params_20(parameters)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"lib/sqlalchemy/cyextension/util.pyx\", line 32, in sqlalchemy.cyextension.util._distill_params_20\n  File \"lib/sqlalchemy/cyextension/util.pyx\", line 23, in sqlalchemy.cyextension.util._check_item\nsqlalchemy.exc.ArgumentError: List argument must consist only of tuples or dictionaries"}, "extra": {"request_id": "dc6560c98e6431c1", "exception_type": "ArgumentError", "request_method": "GET", "request_path": "/api/public/products/1"}}
{"timestamp": "2025-08-16T10:21:42.383788Z", "level": "ERROR", "logger": "main", "message": "Unhandled exception: List argument must consist only of tuples or dictionaries", "module": "logging_config", "function": "handle_exception", "line": 230, "process_id": 40640, "thread_id": 75088, "request_id": "84501fdadc660581", "request": {"method": "GET", "url": "http://localhost:5000/api/public/products/1", "path": "/api/public/products/1", "remote_addr": "127.0.0.1", "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:143.0) Gecko/20100101 Firefox/143.0"}, "exception": {"type": "ArgumentError", "message": "List argument must consist only of tuples or dictionaries", "traceback": "Traceback (most recent call last):\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\routes.py\", line 125, in public_product_detail\n    product = execute_query(\"\"\"\n              ^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\models.py\", line 25, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 104, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 83, in execute_query_pooled\n    result = conn.execute(text(query), params or {})\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1409, in execute\n    distilled_parameters = _distill_params_20(parameters)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"lib/sqlalchemy/cyextension/util.pyx\", line 32, in sqlalchemy.cyextension.util._distill_params_20\n  File \"lib/sqlalchemy/cyextension/util.pyx\", line 23, in sqlalchemy.cyextension.util._check_item\nsqlalchemy.exc.ArgumentError: List argument must consist only of tuples or dictionaries"}, "extra": {"request_id": "84501fdadc660581", "exception_type": "ArgumentError", "request_method": "GET", "request_path": "/api/public/products/1"}}
{"timestamp": "2025-08-16T10:21:44.406352Z", "level": "ERROR", "logger": "main", "message": "Unhandled exception: List argument must consist only of tuples or dictionaries", "module": "logging_config", "function": "handle_exception", "line": 230, "process_id": 40640, "thread_id": 29324, "request_id": "dc751ecdaa3a6dec", "request": {"method": "GET", "url": "http://localhost:5000/api/public/products/1", "path": "/api/public/products/1", "remote_addr": "127.0.0.1", "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:143.0) Gecko/20100101 Firefox/143.0"}, "exception": {"type": "ArgumentError", "message": "List argument must consist only of tuples or dictionaries", "traceback": "Traceback (most recent call last):\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\routes.py\", line 125, in public_product_detail\n    product = execute_query(\"\"\"\n              ^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\models.py\", line 25, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 104, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 83, in execute_query_pooled\n    result = conn.execute(text(query), params or {})\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1409, in execute\n    distilled_parameters = _distill_params_20(parameters)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"lib/sqlalchemy/cyextension/util.pyx\", line 32, in sqlalchemy.cyextension.util._distill_params_20\n  File \"lib/sqlalchemy/cyextension/util.pyx\", line 23, in sqlalchemy.cyextension.util._check_item\nsqlalchemy.exc.ArgumentError: List argument must consist only of tuples or dictionaries"}, "extra": {"request_id": "dc751ecdaa3a6dec", "exception_type": "ArgumentError", "request_method": "GET", "request_path": "/api/public/products/1"}}
{"timestamp": "2025-08-16T10:21:54.492250Z", "level": "ERROR", "logger": "main", "message": "Unhandled exception: List argument must consist only of tuples or dictionaries", "module": "logging_config", "function": "handle_exception", "line": 230, "process_id": 40640, "thread_id": 34208, "request_id": "75a02f51f3d9ea51", "request": {"method": "POST", "url": "http://localhost:5000/api/user/auth/login", "path": "/api/user/auth/login", "remote_addr": "127.0.0.1", "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:143.0) Gecko/20100101 Firefox/143.0"}, "exception": {"type": "ArgumentError", "message": "List argument must consist only of tuples or dictionaries", "traceback": "Traceback (most recent call last):\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\user\\auth.py\", line 107, in login\n    user = UserModel.get_by_email(email)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\models.py\", line 115, in get_by_email\n    return execute_query(\n           ^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\models.py\", line 25, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 104, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 83, in execute_query_pooled\n    result = conn.execute(text(query), params or {})\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1409, in execute\n    distilled_parameters = _distill_params_20(parameters)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"lib/sqlalchemy/cyextension/util.pyx\", line 32, in sqlalchemy.cyextension.util._distill_params_20\n  File \"lib/sqlalchemy/cyextension/util.pyx\", line 23, in sqlalchemy.cyextension.util._check_item\nsqlalchemy.exc.ArgumentError: List argument must consist only of tuples or dictionaries"}, "extra": {"request_id": "75a02f51f3d9ea51", "exception_type": "ArgumentError", "request_method": "POST", "request_path": "/api/user/auth/login"}}
{"timestamp": "2025-08-16T10:22:04.403122Z", "level": "ERROR", "logger": "main", "message": "Unhandled exception: List argument must consist only of tuples or dictionaries", "module": "logging_config", "function": "handle_exception", "line": 230, "process_id": 40640, "thread_id": 24992, "request_id": "7225faef225faffd", "request": {"method": "POST", "url": "http://localhost:5000/api/user/auth/login", "path": "/api/user/auth/login", "remote_addr": "127.0.0.1", "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:143.0) Gecko/20100101 Firefox/143.0"}, "exception": {"type": "ArgumentError", "message": "List argument must consist only of tuples or dictionaries", "traceback": "Traceback (most recent call last):\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\user\\auth.py\", line 107, in login\n    user = UserModel.get_by_email(email)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\models.py\", line 115, in get_by_email\n    return execute_query(\n           ^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\models.py\", line 25, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 104, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 83, in execute_query_pooled\n    result = conn.execute(text(query), params or {})\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1409, in execute\n    distilled_parameters = _distill_params_20(parameters)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"lib/sqlalchemy/cyextension/util.pyx\", line 32, in sqlalchemy.cyextension.util._distill_params_20\n  File \"lib/sqlalchemy/cyextension/util.pyx\", line 23, in sqlalchemy.cyextension.util._check_item\nsqlalchemy.exc.ArgumentError: List argument must consist only of tuples or dictionaries"}, "extra": {"request_id": "7225faef225faffd", "exception_type": "ArgumentError", "request_method": "POST", "request_path": "/api/user/auth/login"}}
{"timestamp": "2025-08-16T10:24:27.623455Z", "level": "ERROR", "logger": "main", "message": "Unhandled exception: List argument must consist only of tuples or dictionaries", "module": "logging_config", "function": "handle_exception", "line": 230, "process_id": 40640, "thread_id": 26372, "request_id": "85e7b43e20ef1a48", "request": {"method": "POST", "url": "http://localhost:5000/api/user/auth/login", "path": "/api/user/auth/login", "remote_addr": "127.0.0.1", "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:143.0) Gecko/20100101 Firefox/143.0"}, "exception": {"type": "ArgumentError", "message": "List argument must consist only of tuples or dictionaries", "traceback": "Traceback (most recent call last):\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\user\\auth.py\", line 107, in login\n    user = UserModel.get_by_email(email)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\models.py\", line 115, in get_by_email\n    return execute_query(\n           ^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\models.py\", line 25, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 104, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 83, in execute_query_pooled\n    result = conn.execute(text(query), params or {})\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1409, in execute\n    distilled_parameters = _distill_params_20(parameters)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"lib/sqlalchemy/cyextension/util.pyx\", line 32, in sqlalchemy.cyextension.util._distill_params_20\n  File \"lib/sqlalchemy/cyextension/util.pyx\", line 23, in sqlalchemy.cyextension.util._check_item\nsqlalchemy.exc.ArgumentError: List argument must consist only of tuples or dictionaries"}, "extra": {"request_id": "85e7b43e20ef1a48", "exception_type": "ArgumentError", "request_method": "POST", "request_path": "/api/user/auth/login"}}
{"timestamp": "2025-08-16T10:26:46.145659Z", "level": "ERROR", "logger": "main", "message": "Unhandled exception: (pymysql.err.OperationalError) (1049, \"Unknown database 'ecommerce'\")\n(Background on this error at: https://sqlalche.me/e/20/e3q8)", "module": "logging_config", "function": "handle_exception", "line": 230, "process_id": 77708, "thread_id": 77376, "request_id": "5363e55c1ba278ff", "request": {"method": "POST", "url": "http://localhost:5000/api/user/auth/register", "path": "/api/user/auth/register", "remote_addr": "127.0.0.1", "user_agent": "curl/8.7.1"}, "exception": {"type": "OperationalError", "message": "(pymysql.err.OperationalError) (1049, \"Unknown database 'ecommerce'\")\n(Background on this error at: https://sqlalche.me/e/20/e3q8)", "traceback": "Traceback (most recent call last):\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 145, in __init__\n    self._dbapi_connection = engine.raw_connection()\n                             ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3297, in raw_connection\n    return self.pool.connect()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 449, in connect\n    return _ConnectionFairy._checkout(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 1264, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 713, in checkout\n    rec = pool._do_get()\n          ^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 179, in _do_get\n    with util.safe_reraise():\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 177, in _do_get\n    return self._create_connection()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 390, in _create_connection\n    return _ConnectionRecord(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 675, in __init__\n    self.__connect()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 901, in __connect\n    with util.safe_reraise():\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 897, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\create.py\", line 646, in connect\n    return dialect.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 625, in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 361, in __init__\n    self.connect()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 669, in connect\n    self._request_authentication()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 971, in _request_authentication\n    auth_packet = self._process_auth(plugin_name, auth_packet)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 1062, in _process_auth\n    pkt = self._read_packet()\n          ^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 775, in _read_packet\n    packet.raise_for_error()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\protocol.py\", line 219, in raise_for_error\n    err.raise_mysql_exception(self._data)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\err.py\", line 150, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.OperationalError: (1049, \"Unknown database 'ecommerce'\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\user\\auth.py\", line 57, in register\n    existing_user = UserModel.get_by_email(email)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\models.py\", line 115, in get_by_email\n    return execute_query(\n           ^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\models.py\", line 25, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 104, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 82, in execute_query_pooled\n    with get_db_connection() as conn:\n  File \"C:\\Users\\sanid\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 53, in get_db_connection\n    connection = engine.connect()\n                 ^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3273, in connect\n    return self._connection_cls(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 147, in __init__\n    Connection._handle_dbapi_exception_noconnection(\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2436, in _handle_dbapi_exception_noconnection\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 145, in __init__\n    self._dbapi_connection = engine.raw_connection()\n                             ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3297, in raw_connection\n    return self.pool.connect()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 449, in connect\n    return _ConnectionFairy._checkout(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 1264, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 713, in checkout\n    rec = pool._do_get()\n          ^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 179, in _do_get\n    with util.safe_reraise():\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 177, in _do_get\n    return self._create_connection()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 390, in _create_connection\n    return _ConnectionRecord(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 675, in __init__\n    self.__connect()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 901, in __connect\n    with util.safe_reraise():\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 897, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\create.py\", line 646, in connect\n    return dialect.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 625, in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 361, in __init__\n    self.connect()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 669, in connect\n    self._request_authentication()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 971, in _request_authentication\n    auth_packet = self._process_auth(plugin_name, auth_packet)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 1062, in _process_auth\n    pkt = self._read_packet()\n          ^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 775, in _read_packet\n    packet.raise_for_error()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\protocol.py\", line 219, in raise_for_error\n    err.raise_mysql_exception(self._data)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\err.py\", line 150, in raise_mysql_exception\n    raise errorclass(errno, errval)\nsqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1049, \"Unknown database 'ecommerce'\")\n(Background on this error at: https://sqlalche.me/e/20/e3q8)"}, "extra": {"request_id": "5363e55c1ba278ff", "exception_type": "OperationalError", "request_method": "POST", "request_path": "/api/user/auth/register"}}
{"timestamp": "2025-08-16T10:27:41.898234Z", "level": "ERROR", "logger": "main", "message": "Unhandled exception: (pymysql.err.OperationalError) (1049, \"Unknown database 'ecommerce'\")\n(Background on this error at: https://sqlalche.me/e/20/e3q8)", "module": "logging_config", "function": "handle_exception", "line": 230, "process_id": 77708, "thread_id": 8668, "request_id": "bdf268ecf3de17ab", "request": {"method": "POST", "url": "http://localhost:5000/api/user/auth/register", "path": "/api/user/auth/register", "remote_addr": "127.0.0.1", "user_agent": "curl/8.7.1"}, "exception": {"type": "OperationalError", "message": "(pymysql.err.OperationalError) (1049, \"Unknown database 'ecommerce'\")\n(Background on this error at: https://sqlalche.me/e/20/e3q8)", "traceback": "Traceback (most recent call last):\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 145, in __init__\n    self._dbapi_connection = engine.raw_connection()\n                             ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3297, in raw_connection\n    return self.pool.connect()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 449, in connect\n    return _ConnectionFairy._checkout(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 1264, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 713, in checkout\n    rec = pool._do_get()\n          ^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 179, in _do_get\n    with util.safe_reraise():\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 177, in _do_get\n    return self._create_connection()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 390, in _create_connection\n    return _ConnectionRecord(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 675, in __init__\n    self.__connect()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 901, in __connect\n    with util.safe_reraise():\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 897, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\create.py\", line 646, in connect\n    return dialect.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 625, in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 361, in __init__\n    self.connect()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 669, in connect\n    self._request_authentication()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 971, in _request_authentication\n    auth_packet = self._process_auth(plugin_name, auth_packet)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 1062, in _process_auth\n    pkt = self._read_packet()\n          ^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 775, in _read_packet\n    packet.raise_for_error()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\protocol.py\", line 219, in raise_for_error\n    err.raise_mysql_exception(self._data)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\err.py\", line 150, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.OperationalError: (1049, \"Unknown database 'ecommerce'\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\user\\auth.py\", line 57, in register\n    existing_user = UserModel.get_by_email(email)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\models.py\", line 115, in get_by_email\n    return execute_query(\n           ^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\models.py\", line 25, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 104, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 82, in execute_query_pooled\n    with get_db_connection() as conn:\n  File \"C:\\Users\\sanid\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 53, in get_db_connection\n    connection = engine.connect()\n                 ^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3273, in connect\n    return self._connection_cls(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 147, in __init__\n    Connection._handle_dbapi_exception_noconnection(\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2436, in _handle_dbapi_exception_noconnection\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 145, in __init__\n    self._dbapi_connection = engine.raw_connection()\n                             ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3297, in raw_connection\n    return self.pool.connect()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 449, in connect\n    return _ConnectionFairy._checkout(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 1264, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 713, in checkout\n    rec = pool._do_get()\n          ^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 179, in _do_get\n    with util.safe_reraise():\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 177, in _do_get\n    return self._create_connection()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 390, in _create_connection\n    return _ConnectionRecord(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 675, in __init__\n    self.__connect()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 901, in __connect\n    with util.safe_reraise():\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 897, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\create.py\", line 646, in connect\n    return dialect.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 625, in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 361, in __init__\n    self.connect()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 669, in connect\n    self._request_authentication()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 971, in _request_authentication\n    auth_packet = self._process_auth(plugin_name, auth_packet)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 1062, in _process_auth\n    pkt = self._read_packet()\n          ^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 775, in _read_packet\n    packet.raise_for_error()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\protocol.py\", line 219, in raise_for_error\n    err.raise_mysql_exception(self._data)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\err.py\", line 150, in raise_mysql_exception\n    raise errorclass(errno, errval)\nsqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1049, \"Unknown database 'ecommerce'\")\n(Background on this error at: https://sqlalche.me/e/20/e3q8)"}, "extra": {"request_id": "bdf268ecf3de17ab", "exception_type": "OperationalError", "request_method": "POST", "request_path": "/api/user/auth/register"}}
{"timestamp": "2025-08-16T10:29:03.717805Z", "level": "ERROR", "logger": "main", "message": "Unhandled exception: (pymysql.err.OperationalError) (1049, \"Unknown database 'ecommerce'\")\n(Background on this error at: https://sqlalche.me/e/20/e3q8)", "module": "logging_config", "function": "handle_exception", "line": 230, "process_id": 24520, "thread_id": 79560, "request_id": "e7ae490ca164197f", "request": {"method": "POST", "url": "http://localhost:5000/api/user/auth/register", "path": "/api/user/auth/register", "remote_addr": "127.0.0.1", "user_agent": "curl/8.7.1"}, "exception": {"type": "OperationalError", "message": "(pymysql.err.OperationalError) (1049, \"Unknown database 'ecommerce'\")\n(Background on this error at: https://sqlalche.me/e/20/e3q8)", "traceback": "Traceback (most recent call last):\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 145, in __init__\n    self._dbapi_connection = engine.raw_connection()\n                             ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3297, in raw_connection\n    return self.pool.connect()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 449, in connect\n    return _ConnectionFairy._checkout(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 1264, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 713, in checkout\n    rec = pool._do_get()\n          ^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 179, in _do_get\n    with util.safe_reraise():\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 177, in _do_get\n    return self._create_connection()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 390, in _create_connection\n    return _ConnectionRecord(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 675, in __init__\n    self.__connect()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 901, in __connect\n    with util.safe_reraise():\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 897, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\create.py\", line 646, in connect\n    return dialect.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 625, in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 361, in __init__\n    self.connect()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 669, in connect\n    self._request_authentication()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 971, in _request_authentication\n    auth_packet = self._process_auth(plugin_name, auth_packet)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 1062, in _process_auth\n    pkt = self._read_packet()\n          ^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 775, in _read_packet\n    packet.raise_for_error()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\protocol.py\", line 219, in raise_for_error\n    err.raise_mysql_exception(self._data)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\err.py\", line 150, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.OperationalError: (1049, \"Unknown database 'ecommerce'\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\user\\auth.py\", line 57, in register\n    existing_user = UserModel.get_by_email(email)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\models.py\", line 115, in get_by_email\n    return execute_query(\n           ^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\models.py\", line 25, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 122, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 82, in execute_query_pooled\n    with get_db_connection() as conn:\n  File \"C:\\Users\\sanid\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 53, in get_db_connection\n    connection = engine.connect()\n                 ^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3273, in connect\n    return self._connection_cls(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 147, in __init__\n    Connection._handle_dbapi_exception_noconnection(\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2436, in _handle_dbapi_exception_noconnection\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 145, in __init__\n    self._dbapi_connection = engine.raw_connection()\n                             ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3297, in raw_connection\n    return self.pool.connect()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 449, in connect\n    return _ConnectionFairy._checkout(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 1264, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 713, in checkout\n    rec = pool._do_get()\n          ^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 179, in _do_get\n    with util.safe_reraise():\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 177, in _do_get\n    return self._create_connection()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 390, in _create_connection\n    return _ConnectionRecord(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 675, in __init__\n    self.__connect()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 901, in __connect\n    with util.safe_reraise():\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 224, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 897, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\create.py\", line 646, in connect\n    return dialect.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 625, in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 361, in __init__\n    self.connect()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 669, in connect\n    self._request_authentication()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 971, in _request_authentication\n    auth_packet = self._process_auth(plugin_name, auth_packet)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 1062, in _process_auth\n    pkt = self._read_packet()\n          ^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 775, in _read_packet\n    packet.raise_for_error()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\protocol.py\", line 219, in raise_for_error\n    err.raise_mysql_exception(self._data)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\err.py\", line 150, in raise_mysql_exception\n    raise errorclass(errno, errval)\nsqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1049, \"Unknown database 'ecommerce'\")\n(Background on this error at: https://sqlalche.me/e/20/e3q8)"}, "extra": {"request_id": "e7ae490ca164197f", "exception_type": "OperationalError", "request_method": "POST", "request_path": "/api/user/auth/register"}}
{"timestamp": "2025-08-16T10:55:06.293740Z", "level": "ERROR", "logger": "main", "message": "Unhandled exception: (pymysql.err.ProgrammingError) (1146, \"Table 'ecommerce.users' doesn't exist\")\n[SQL: SELECT * FROM users WHERE email = %(0)s AND status = 'active']\n[parameters: {'0': 'test@example.com'}]\n(Background on this error at: https://sqlalche.me/e/20/f405)", "module": "logging_config", "function": "handle_exception", "line": 230, "process_id": 24520, "thread_id": 23972, "request_id": "f182f0eea7d25b76", "request": {"method": "POST", "url": "http://localhost:5000/api/user/auth/register", "path": "/api/user/auth/register", "remote_addr": "127.0.0.1", "user_agent": "curl/8.7.1"}, "exception": {"type": "ProgrammingError", "message": "(pymysql.err.ProgrammingError) (1146, \"Table 'ecommerce.users' doesn't exist\")\n[SQL: SELECT * FROM users WHERE email = %(0)s AND status = 'active']\n[parameters: {'0': 'test@example.com'}]\n(Background on this error at: https://sqlalche.me/e/20/f405)", "traceback": "Traceback (most recent call last):\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1963, in _exec_single_context\n    self.dialect.do_execute(\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 943, in do_execute\n    cursor.execute(statement, parameters)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\cursors.py\", line 153, in execute\n    result = self._query(query)\n             ^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\cursors.py\", line 322, in _query\n    conn.query(q)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 563, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 825, in _read_query_result\n    result.read()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 1199, in read\n    first_packet = self.connection._read_packet()\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 775, in _read_packet\n    packet.raise_for_error()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\protocol.py\", line 219, in raise_for_error\n    err.raise_mysql_exception(self._data)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\err.py\", line 150, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.ProgrammingError: (1146, \"Table 'ecommerce.users' doesn't exist\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\user\\auth.py\", line 57, in register\n    existing_user = UserModel.get_by_email(email)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\models.py\", line 115, in get_by_email\n    return execute_query(\n           ^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\shared\\models.py\", line 25, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 122, in execute_query\n    return execute_query_pooled(query, params, fetch_one, fetch_all, get_insert_id)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\web\\backend\\database.py\", line 101, in execute_query_pooled\n    result = conn.execute(text(query), query_params)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1415, in execute\n    return meth(\n           ^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 523, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1637, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1842, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1982, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2351, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1963, in _exec_single_context\n    self.dialect.do_execute(\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 943, in do_execute\n    cursor.execute(statement, parameters)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\cursors.py\", line 153, in execute\n    result = self._query(query)\n             ^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\cursors.py\", line 322, in _query\n    conn.query(q)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 563, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 825, in _read_query_result\n    result.read()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 1199, in read\n    first_packet = self.connection._read_packet()\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\connections.py\", line 775, in _read_packet\n    packet.raise_for_error()\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\protocol.py\", line 219, in raise_for_error\n    err.raise_mysql_exception(self._data)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\pymysql\\err.py\", line 150, in raise_mysql_exception\n    raise errorclass(errno, errval)\nsqlalchemy.exc.ProgrammingError: (pymysql.err.ProgrammingError) (1146, \"Table 'ecommerce.users' doesn't exist\")\n[SQL: SELECT * FROM users WHERE email = %(0)s AND status = 'active']\n[parameters: {'0': 'test@example.com'}]\n(Background on this error at: https://sqlalche.me/e/20/f405)"}, "extra": {"request_id": "f182f0eea7d25b76", "exception_type": "ProgrammingError", "request_method": "POST", "request_path": "/api/user/auth/register"}}
{"timestamp": "2025-08-16T17:04:15.188495Z", "level": "ERROR", "logger": "main", "message": "Unhandled exception: 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.", "module": "logging_config", "function": "handle_exception", "line": 230, "process_id": 93200, "thread_id": 3000, "request_id": "791a4b766b6ec8a9", "request": {"method": "GET", "url": "http://127.0.0.1:5000/", "path": "/", "remote_addr": "127.0.0.1", "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:143.0) Gecko/20100101 Firefox/143.0"}, "exception": {"type": "NotFound", "message": "404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.", "traceback": "Traceback (most recent call last):\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 891, in dispatch_request\n    self.raise_routing_exception(req)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 500, in raise_routing_exception\n    raise request.routing_exception  # type: ignore[misc]\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\ctx.py\", line 362, in match_request\n    result = self.url_adapter.match(return_rule=True)  # type: ignore\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\werkzeug\\routing\\map.py\", line 629, in match\n    raise NotFound() from None\nwerkzeug.exceptions.NotFound: 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again."}, "extra": {"request_id": "791a4b766b6ec8a9", "exception_type": "NotFound", "request_method": "GET", "request_path": "/"}}
{"timestamp": "2025-08-16T17:04:15.228622Z", "level": "ERROR", "logger": "main", "message": "Unhandled exception: 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.", "module": "logging_config", "function": "handle_exception", "line": 230, "process_id": 93200, "thread_id": 88864, "request_id": "b5e1aaca9427572d", "request": {"method": "GET", "url": "http://127.0.0.1:5000/favicon.ico", "path": "/favicon.ico", "remote_addr": "127.0.0.1", "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:143.0) Gecko/20100101 Firefox/143.0"}, "exception": {"type": "NotFound", "message": "404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.", "traceback": "Traceback (most recent call last):\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 891, in dispatch_request\n    self.raise_routing_exception(req)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 500, in raise_routing_exception\n    raise request.routing_exception  # type: ignore[misc]\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\ctx.py\", line 362, in match_request\n    result = self.url_adapter.match(return_rule=True)  # type: ignore\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\werkzeug\\routing\\map.py\", line 629, in match\n    raise NotFound() from None\nwerkzeug.exceptions.NotFound: 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again."}, "extra": {"request_id": "b5e1aaca9427572d", "exception_type": "NotFound", "request_method": "GET", "request_path": "/favicon.ico"}}
{"timestamp": "2025-08-16T17:11:54.016093Z", "level": "ERROR", "logger": "main", "message": "Unhandled exception: 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.", "module": "logging_config", "function": "handle_exception", "line": 230, "process_id": 93200, "thread_id": 86788, "request_id": "00fddb6f1f9c2aad", "request": {"method": "GET", "url": "http://localhost:5000/favicon.ico", "path": "/favicon.ico", "remote_addr": "127.0.0.1", "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:143.0) Gecko/20100101 Firefox/143.0"}, "exception": {"type": "NotFound", "message": "404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.", "traceback": "Traceback (most recent call last):\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 891, in dispatch_request\n    self.raise_routing_exception(req)\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\app.py\", line 500, in raise_routing_exception\n    raise request.routing_exception  # type: ignore[misc]\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\flask\\ctx.py\", line 362, in match_request\n    result = self.url_adapter.match(return_rule=True)  # type: ignore\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\E-COM\\venv\\Lib\\site-packages\\werkzeug\\routing\\map.py\", line 629, in match\n    raise NotFound() from None\nwerkzeug.exceptions.NotFound: 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again."}, "extra": {"request_id": "00fddb6f1f9c2aad", "exception_type": "NotFound", "request_method": "GET", "request_path": "/favicon.ico"}}
